{"ast":null,"code":"var _jsxFileName = \"/home/gballard23/Development/code/react-hooks-state-events-mini-project/src/components/NewTaskForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewTaskForm(_ref) {\n  _s();\n\n  let {\n    categories,\n    onTaskFormSubmit\n  } = _ref;\n  const {\n    name,\n    setName\n  } = useState(\"\");\n  const categoryList = categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: cat,\n    children: cat\n  }, cat, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this));\n\n  const category = e => {\n    e.target.value;\n  };\n\n  function handName(e) {\n    setName(e.target.value);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    onTaskFormSubmit({\n      name,\n      category\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"new-task-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Details\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"text\",\n        value: name,\n        onChange: handName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Category\", /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"category\",\n        onChange: category,\n        children: categoryList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Add task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewTaskForm, \"khOFWlfojxKjMquvQFibuZvzDxk=\");\n\n_c = NewTaskForm;\nexport default NewTaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTaskForm\");","map":{"version":3,"sources":["/home/gballard23/Development/code/react-hooks-state-events-mini-project/src/components/NewTaskForm.js"],"names":["React","useState","NewTaskForm","categories","onTaskFormSubmit","name","setName","categoryList","map","cat","category","e","target","value","handName","handleSubmit","event","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,WAAT,OAAqD;AAAA;;AAAA,MAAhC;AAACC,IAAAA,UAAD;AAAaC,IAAAA;AAAb,GAAgC;AACrD,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACE,QAAMM,YAAY,GAAGJ,UAAU,CAACK,GAAX,CAAgBC,GAAD,iBAClC;AAEE,IAAA,KAAK,EAAEA,GAFT;AAAA,cAGEA;AAHF,KACOA,GADP;AAAA;AAAA;AAAA;AAAA,UADmB,CAArB;;AAOA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,MAAF,CAASC,KAAT;AACD,GAFD;;AAIA,WAASC,QAAT,CAAkBH,CAAlB,EAAoB;AAClBL,IAAAA,OAAO,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD;;AAED,WAASE,YAAT,CAAsBC,KAAtB,EAA4B;AAC1BA,IAAAA,KAAK,CAACC,cAAN;AACAb,IAAAA,gBAAgB,CAAC;AACfC,MAAAA,IADe;AAEfK,MAAAA;AAFe,KAAD,CAAhB;AAKD;;AAED,sBACE;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAgC,IAAA,QAAQ,EAAEK,YAA1C;AAAA,4BACE;AAAA,yCAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,KAAK,EAAEV,IAAtC;AAA4C,QAAA,QAAQ,EAAES;AAAtD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA,0CAEE;AAAQ,QAAA,IAAI,EAAC,UAAb;AAAwB,QAAA,QAAQ,EAAEJ,QAAlC;AAAA,kBACGH;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAWE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAzCQL,W;;KAAAA,W;AA2CT,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction NewTaskForm({categories, onTaskFormSubmit}) {\nconst {name, setName} = useState(\"\")\n  const categoryList = categories.map((cat) => (\n    <option \n      key={cat} \n      value={cat} \n    >{cat}</option>\n  ))\n\n  const category = (e) => {\n    e.target.value\n  } \n\n  function handName(e){\n    setName(e.target.value)\n  }\n\n  function handleSubmit(event){\n    event.preventDefault();\n    onTaskFormSubmit({\n      name,\n      category\n\n    })\n  }\n\n  return (\n    <form className=\"new-task-form\" onSubmit={handleSubmit}>\n      <label>\n        Details\n        <input type=\"text\" name=\"text\" value={name} onChange={handName}/>\n      </label>\n      <label>\n        Category\n        <select name=\"category\" onChange={category}>\n          {categoryList}\n        </select>\n      </label>\n      <input type=\"submit\" value=\"Add task\" />\n    </form>\n  );\n}\n\nexport default NewTaskForm;\n"]},"metadata":{},"sourceType":"module"}