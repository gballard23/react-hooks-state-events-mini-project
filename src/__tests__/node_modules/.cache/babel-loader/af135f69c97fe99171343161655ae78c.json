{"ast":null,"code":"var _jsxFileName = \"/home/gballard23/Development/code/react-hooks-state-events-mini-project/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport CategoryFilter from \"./CategoryFilter\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport TaskList from \"./TaskList\";\nimport { CATEGORIES, TASKS } from \"../data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(\"Here's the data you're working with\");\nconsole.log({\n  CATEGORIES,\n  TASKS\n});\n\nfunction App() {\n  _s();\n\n  const [isSelected, setIsSelected] = useState(false);\n\n  function handleClick() {\n    setIsSelected(isSelected => !isSelected);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), CATEGORIES.map(cat => /*#__PURE__*/_jsxDEV(CategoryFilter, {\n      category: cat,\n      handleClick: handleClick\n    }, cat, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(NewTaskForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: TASKS\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5DtxMhs0n+JsbGWNZftSFTxrVZQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gballard23/Development/code/react-hooks-state-events-mini-project/src/components/App.js"],"names":["React","useState","CategoryFilter","NewTaskForm","TaskList","CATEGORIES","TASKS","console","log","App","isSelected","setIsSelected","handleClick","map","cat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,SAAlC;;AACAC,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACAD,OAAO,CAACC,GAAR,CAAY;AAAEH,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAZ;;AAEA,SAASG,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;;AAID,WAASW,WAAT,GAAuB;AACpBD,IAAAA,aAAa,CAAED,UAAD,IAAgB,CAACA,UAAlB,CAAb;AACD;;AAID,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGL,UAAU,CAACQ,GAAX,CAAgBC,GAAD,iBACd,QAAC,cAAD;AAA0B,MAAA,QAAQ,EAAEA,GAApC;AAA0C,MAAA,WAAW,EAAEF;AAAvD,OAAqBE,GAArB;AAAA;AAAA;AAAA;AAAA,YADD,CAFH,eAKE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,QAAD;AAAU,MAAA,KAAK,EAAER;AAAjB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAtBQG,G;;KAAAA,G;AAwBT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport CategoryFilter from \"./CategoryFilter\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport TaskList from \"./TaskList\";\n\nimport { CATEGORIES, TASKS } from \"../data\";\nconsole.log(\"Here's the data you're working with\");\nconsole.log({ CATEGORIES, TASKS });\n\nfunction App() {\n\n  const [isSelected, setIsSelected] = useState(false);\n  \n  \n  \n function handleClick() {\n    setIsSelected((isSelected) => !isSelected);\n  }\n  \n\n\n  return (\n    <div className=\"App\">\n      <h2>My tasks</h2>\n      {CATEGORIES.map((cat) => (\n        <CategoryFilter key={cat} category={cat}  handleClick={handleClick}/>\n      ))}     \n      <NewTaskForm />\n      <TaskList tasks={TASKS}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}