{"ast":null,"code":"var _jsxFileName = \"/home/gballard23/Development/code/react-hooks-state-events-mini-project/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport CategoryFilter from \"./CategoryFilter\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport TaskList from \"./TaskList\";\nimport { CATEGORIES, TASKS } from \"../data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(\"Here's the data you're working with\");\nconsole.log({\n  CATEGORIES,\n  TASKS\n});\n\nfunction App() {\n  _s();\n\n  const [category, setCategory] = useState(\"All\");\n  const [tasks, setTasks] = useState(TASKS);\n\n  function handleAddTask(newTask) {\n    setTasks([...tasks, newTask]);\n  }\n\n  const visibleTasks = tasks.filter(task => category === \"All\" || task.category === category);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CategoryFilter, {\n      CATEGORIES: CATEGORIES\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n      categories: CATEGORIES.filter(cat => cat !== \"All\"),\n      onTaskFormSubmit: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"u5GN8jbi5ETKad0kYy4KxOUZYpY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gballard23/Development/code/react-hooks-state-events-mini-project/src/components/App.js"],"names":["React","useState","CategoryFilter","NewTaskForm","TaskList","CATEGORIES","TASKS","console","log","App","category","setCategory","tasks","setTasks","handleAddTask","newTask","visibleTasks","filter","task","cat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,SAAlC;;AACAC,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACAD,OAAO,CAACC,GAAR,CAAY;AAAEH,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAZ;;AAEA,SAASG,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAACK,KAAD,CAAlC;;AAEA,WAASQ,aAAT,CAAuBC,OAAvB,EAAgC;AAC9BF,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWG,OAAX,CAAD,CAAR;AACD;;AAGD,QAAMC,YAAY,GAAGJ,KAAK,CAACK,MAAN,CAClBC,IAAD,IAAUR,QAAQ,KAAK,KAAb,IAAsBQ,IAAI,CAACR,QAAL,KAAkBA,QAD/B,CAArB;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AACE,MAAA,UAAU,EAAEL;AADd;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,WAAD;AACA,MAAA,UAAU,EAAEA,UAAU,CAACY,MAAX,CAAmBE,GAAD,IAASA,GAAG,KAAK,KAAnC,CADZ;AAEC,MAAA,gBAAgB,EAAEL;AAFnB;AAAA;AAAA;AAAA;AAAA,YALF,eASE,QAAC,QAAD;AAAW,MAAA,KAAK,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA1BQH,G;;KAAAA,G;AA4BT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport CategoryFilter from \"./CategoryFilter\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport TaskList from \"./TaskList\";\n\nimport { CATEGORIES, TASKS } from \"../data\";\nconsole.log(\"Here's the data you're working with\");\nconsole.log({ CATEGORIES, TASKS });\n\nfunction App() {\n  const [category, setCategory] = useState(\"All\");\n  const [tasks, setTasks] = useState(TASKS);\n\n  function handleAddTask(newTask) {\n    setTasks([...tasks, newTask]);\n  }\n\n\n  const visibleTasks = tasks.filter(\n    (task) => category === \"All\" || task.category === category\n  );\n\n  return (\n    <div className=\"App\">\n      <h2>My tasks</h2>\n      <CategoryFilter \n        CATEGORIES={CATEGORIES}\n       />\n      <NewTaskForm\n      categories={CATEGORIES.filter((cat) => cat !== \"All\")}\n       onTaskFormSubmit={handleAddTask}\n       />\n      <TaskList  tasks={tasks}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}